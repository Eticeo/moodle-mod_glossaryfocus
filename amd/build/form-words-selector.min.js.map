{"version":3,"sources":["../src/form-words-selector.js"],"names":["define","$","Ajax","processResults","selector","results","words","each","index","word","push","value","id","label","name","transport","query","success","failure","promise","idglossary","val","call","methodname","args","then","fail"],"mappings":"AAuBAA,OAAM,yCAAC,CAAC,QAAD,CAAW,WAAX,CAAD,CAA0B,SAASC,CAAT,CAAYC,CAAZ,CAA6B,CAEzD,MAAkE,CAE9DC,cAAc,CAAE,wBAASC,CAAT,CAAmBC,CAAnB,CAA4B,CACxC,GAAIC,CAAAA,CAAK,CAAG,EAAZ,CACAL,CAAC,CAACM,IAAF,CAAOF,CAAP,CAAgB,SAASG,CAAT,CAAgBC,CAAhB,CAAsB,CAClCH,CAAK,CAACI,IAAN,CAAW,CACPC,KAAK,CAAEF,CAAI,CAACG,EADL,CAEPC,KAAK,CAAEJ,CAAI,CAACK,IAFL,CAAX,CAIH,CALD,EAMA,MAAOR,CAAAA,CACV,CAX6D,CAa9DS,SAAS,CAAE,mBAASX,CAAT,CAAmBY,CAAnB,CAA0BC,CAA1B,CAAmCC,CAAnC,CAA4C,IAC/CC,CAAAA,CAD+C,CAG/CC,CAAU,CAAGnB,CAAC,CAAC,sBAAD,CAAD,CAA0BoB,GAA1B,EAHkC,CAInD,GAA0B,WAAtB,QAAOD,CAAAA,CAAP,EAAyE,EAApC,GAAAnB,CAAC,CAAC,sBAAD,CAAD,CAA0BoB,GAA1B,EAAzC,CAAiF,CAC7ED,CAAU,CAAGA,CAChB,CAFD,IAEO,CACHA,CAAU,CAAG,CAChB,CACDD,CAAO,CAAGjB,CAAI,CAACoB,IAAL,CAAU,CAAC,CACjBC,UAAU,CAAE,6BADK,CAEjBC,IAAI,CAAE,CACFR,KAAK,CAAEA,CADL,CAEFI,UAAU,CAAEA,CAFV,CAFW,CAAD,CAAV,CAAV,CAQAD,CAAO,CAAC,CAAD,CAAP,CAAWM,IAAX,CAAgBR,CAAhB,EAAyBS,IAAzB,CAA8BR,CAA9B,CAwCH,CAtE6D,CA0ErE,CA5EK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Search user selector module.\r\n *\r\n * @module mod_glossaryfocus/form-words-selector\r\n * @copyright 2021 Eticeo <https://eticeo.com> made by Jeremy Carre <jeremy.carre@eticeo.fr>\r\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine(['jquery', 'core/ajax'], function($, Ajax, Templates) {\r\n\r\n    return /** @alias module:mod_glossaryfocus/form-words-selector */ {\r\n\r\n        processResults: function(selector, results) {\r\n            var words = [];\r\n            $.each(results, function(index, word) {\r\n                words.push({\r\n                    value: word.id,\r\n                    label: word.name\r\n                });\r\n            });\r\n            return words;\r\n        },\r\n\r\n        transport: function(selector, query, success, failure) {\r\n            var promise;\r\n\r\n            var idglossary = $('#id_idglossarymaster').val();\r\n            if (typeof idglossary !== \"undefined\" && $('#id_idglossarymaster').val() !== '') {\r\n                idglossary = idglossary;\r\n            } else {\r\n                idglossary = 0;\r\n            }\r\n            promise = Ajax.call([{\r\n                methodname: 'mod_glossaryfocus_get_words',\r\n                args: {\r\n                    query: query,\r\n                    idglossary: idglossary\r\n                }\r\n            }]);\r\n\r\n            promise[0].then(success).fail(failure);\r\n\r\n            /*\r\n            var promise;\r\n\r\n            // Search within specific glossary if known\r\n            var args = {query: query};\r\n            var idglossary = $('#id_idglossarymaster').val();\r\n            if (typeof idglossary !== \"undefined\" && $('#id_idglossarymaster').val() !== '') {\r\n                args.idglossary = idglossary;\r\n            } else {\r\n                args.idglossary = 0;\r\n            }\r\n\r\n            // Call AJAX request.\r\n            promise = Ajax.call([{methodname: 'mod_glossaryfocus_get_words', args: args}]);\r\n\r\n            // When AJAX request returns, handle the results.\r\n            promise[0].then(function(results) {\r\n                var promises = [];\r\n\r\n                /*\r\n                // Render label with user name and picture.\r\n                $.each(results, function(index, user) {\r\n                    promises.push(Templates.render('core_search/form-user-selector-suggestion', user));\r\n                });\r\n\r\n\r\n                // Apply the label to the results.\r\n                return $.when.apply($.when, promises).then(function() {\r\n                    var args = arguments;\r\n                    var i = 0;\r\n                    $.each(results, function(index, word) {\r\n                        word.name = args[i++];\r\n                    });\r\n                    success(results);\r\n                    return;\r\n                });\r\n\r\n            }).fail(failure);*/\r\n        }\r\n\r\n    };\r\n\r\n});\r\n"],"file":"form-words-selector.min.js"}